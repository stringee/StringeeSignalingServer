#********************************************************************
# Wrapper License Properties (Ignored by Community Edition)
#********************************************************************
#include ../conf/wrapper-license.conf
#********************************************************************
# Wrapper Java Properties
#********************************************************************
# Java Application
wrapper.java.command=/data/jdk1.8.0_60/bin/java
# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperStartStopApp
# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
# Java Library Path (location of Wrapper.DLL or libwrapper.so)

wrapper.java.classpath.1=lib/*.jar
wrapper.java.classpath.2=*.jar

wrapper.java.library.path.1=lib
# Java Additional Parameters
#wrapper.java.additional.1=-Dcom.sun.management.jmxremote=TRUE
#wrapper.java.additional.2=-Dcom.sun.management.jmxremote.port=30899
#wrapper.java.additional.3=-Dorg.tanukisoftware.wrapper.WrapperManager.mbean=TRUE
#wrapper.java.additional.4=-Dorg.tanukisoftware.wrapper.WrapperManager.mbean.testing=false
#wrapper.java.additional.5=-Dcom.sun.management.jmxremote.authenticate=false
#wrapper.java.additional.6=-Dcom.sun.management.jmxremote.ssl=false


# Initial Java Heap Size (in MB)
wrapper.java.initmemory=128
# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=1024
# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1=server.Start
wrapper.app.parameter.2=0
wrapper.app.parameter.3=server.Stop
wrapper.app.parameter.4=true
wrapper.app.parameter.5=0
#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM
# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO
# Log file to use for wrapper output logging.
wrapper.logfile=log/wrapper.log
# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM
# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=ERROR
# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=2m
# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=20
# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE
#********************************************************************
# Wrapper Windows Properties
#********************************************************************
# Title to use when running as a console
wrapper.console.title=f_signaling_server
#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.
# Name of the service
wrapper.ntservice.name=f_signaling_server
# Display name of the service
wrapper.ntservice.displayname=f_signaling_server
# Description of the service
wrapper.ntservice.description=f_signaling_server
# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=
# Mode in which the service is installed.  AUTO_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START
# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false
